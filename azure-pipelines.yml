trigger:
  branches:
    include:
      - main

variables:
  acrName: aletheiadotnet.azurecr.io
  tag: $(Build.BuildId)

stages:
  - stage: BuildAndPushImages
    displayName: Build and Push Docker Images
    jobs:
      - job: DockerBuildPush
        displayName: Build and Push Services
        strategy:
          matrix:
            auth-service:
              repository: auth-service
              dockerfilePath: ./AuthService/Dockerfile
              buildContext: ./AuthService
            claim-service:
              repository: claim-service
              dockerfilePath: ./ClaimService/Dockerfile
              buildContext: ./ClaimService
            consultation-service:
              repository: consultation-service
              dockerfilePath: ./ConsultationService/Dockerfile
              buildContext: ./ConsultationService
            dentist-service:
              repository: dentist-service
              dockerfilePath: ./DentistService/Dockerfile
              buildContext: ./DentistService
            patient-service:
              repository: patient-service
              dockerfilePath: ./PatientService/Dockerfile
              buildContext: ./PatientService
            mlnet-service:
              repository: mlnet-service
              dockerfilePath: ./MlNetWorker/Dockerfile
              buildContext: ./MlNetWorker
            api-gateway:
              repository: api-gateway
              dockerfilePath: ./OcelotApiGateway/Dockerfile
              buildContext: ./OcelotApiGateway

        pool:
          vmImage: 'ubuntu-latest'

        steps:
          - task: Docker@2
            displayName: Login to ACR
            inputs:
              command: login
              containerRegistry: $(acrName)
              username: $(ACR_USERNAME)
              password: $(ACR_PASSWORD)

          - task: Docker@2
            displayName: Build & Push $(repository)
            inputs:
              command: buildAndPush
              repository: $(acrName)/$(repository)
              dockerfile: $(dockerfilePath)
              buildContext: $(buildContext)
              tags: |
                $(tag)
                latest
